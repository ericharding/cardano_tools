// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Jormungandr.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Tax from reward that goes to pot
    /// </summary>
    public partial class PathsapiV0Settingsgetresponses200contentapplicationJsonschemapropertiestreasurytax
    {
        /// <summary>
        /// Initializes a new instance of the
        /// PathsapiV0Settingsgetresponses200contentapplicationJsonschemapropertiestreasurytax
        /// class.
        /// </summary>
        public PathsapiV0Settingsgetresponses200contentapplicationJsonschemapropertiestreasurytax()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// PathsapiV0Settingsgetresponses200contentapplicationJsonschemapropertiestreasurytax
        /// class.
        /// </summary>
        /// <param name="fixedProperty">What get subtracted as fixed
        /// value</param>
        /// <param name="ratio">Ratio of tax after fixed amount is subtracted.
        /// Expressed as numerator/denominator</param>
        /// <param name="max">Limit of tax</param>
        public PathsapiV0Settingsgetresponses200contentapplicationJsonschemapropertiestreasurytax(int fixedProperty, PathsapiV0Settingsgetresponses200contentapplicationJsonschemapropertiestreasurytaxpropertiesratio ratio, int? max)
        {
            FixedProperty = fixedProperty;
            Ratio = ratio;
            Max = max;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets what get subtracted as fixed value
        /// </summary>
        [JsonProperty(PropertyName = "fixed")]
        public int FixedProperty { get; set; }

        /// <summary>
        /// Gets or sets ratio of tax after fixed amount is subtracted.
        /// Expressed as numerator/denominator
        /// </summary>
        [JsonProperty(PropertyName = "ratio")]
        public PathsapiV0Settingsgetresponses200contentapplicationJsonschemapropertiestreasurytaxpropertiesratio Ratio { get; set; }

        /// <summary>
        /// Gets or sets limit of tax
        /// </summary>
        [JsonProperty(PropertyName = "max")]
        public int? Max { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Ratio == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Ratio");
            }
            if (Max == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Max");
            }
            if (FixedProperty < 0)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "FixedProperty", 0);
            }
            if (Ratio != null)
            {
                Ratio.Validate();
            }
            if (Max < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "Max", 1);
            }
        }
    }
}
