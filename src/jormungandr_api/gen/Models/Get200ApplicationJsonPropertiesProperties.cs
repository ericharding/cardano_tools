// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Jormungandr.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Fee per certificate operations, all zero if this object absent
    /// </summary>
    public partial class Get200ApplicationJsonPropertiesProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Get200ApplicationJsonPropertiesProperties class.
        /// </summary>
        public Get200ApplicationJsonPropertiesProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// Get200ApplicationJsonPropertiesProperties class.
        /// </summary>
        /// <param name="certificatePoolRegistration">Fee per pool
        /// registration, zero if absent</param>
        /// <param name="certificateStakeDelegation">Fee per stake delegation,
        /// zero if absent</param>
        /// <param name="certificateOwnerStakeDelegation">Fee per pool owner
        /// stake delegation, zero if absent</param>
        public Get200ApplicationJsonPropertiesProperties(int? certificatePoolRegistration = default(int?), int? certificateStakeDelegation = default(int?), int? certificateOwnerStakeDelegation = default(int?))
        {
            CertificatePoolRegistration = certificatePoolRegistration;
            CertificateStakeDelegation = certificateStakeDelegation;
            CertificateOwnerStakeDelegation = certificateOwnerStakeDelegation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets fee per pool registration, zero if absent
        /// </summary>
        [JsonProperty(PropertyName = "certificate_pool_registration")]
        public int? CertificatePoolRegistration { get; set; }

        /// <summary>
        /// Gets or sets fee per stake delegation, zero if absent
        /// </summary>
        [JsonProperty(PropertyName = "certificate_stake_delegation")]
        public int? CertificateStakeDelegation { get; set; }

        /// <summary>
        /// Gets or sets fee per pool owner stake delegation, zero if absent
        /// </summary>
        [JsonProperty(PropertyName = "certificate_owner_stake_delegation")]
        public int? CertificateOwnerStakeDelegation { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CertificatePoolRegistration < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "CertificatePoolRegistration", 1);
            }
            if (CertificateStakeDelegation < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "CertificateStakeDelegation", 1);
            }
            if (CertificateOwnerStakeDelegation < 1)
            {
                throw new ValidationException(ValidationRules.InclusiveMinimum, "CertificateOwnerStakeDelegation", 1);
            }
        }
    }
}
