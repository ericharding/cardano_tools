// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Jormungandr.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// the different logged events associated to this node
    /// </summary>
    public partial class GetResponses200ContentApplicationJsonSchemaItemLogs
    {
        /// <summary>
        /// Initializes a new instance of the
        /// GetResponses200ContentApplicationJsonSchemaItemLogs class.
        /// </summary>
        public GetResponses200ContentApplicationJsonSchemaItemLogs()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// GetResponses200ContentApplicationJsonSchemaItemLogs class.
        /// </summary>
        /// <param name="creationTime">when the node was known of our
        /// node</param>
        /// <param name="lastGossip">the last time we gossiped with the
        /// node</param>
        /// <param name="lastUpdate">the last time we received an update of the
        /// node (via gossiping with another node)</param>
        /// <param name="quarantined">the time at which the node was
        /// quarantined (if not there then the node is not quarantined)</param>
        /// <param name="lastUseOf">the last time this node has been part of a
        /// view for event propagation</param>
        public GetResponses200ContentApplicationJsonSchemaItemLogs(Get200ApplicationJsonItemsLogsCreationTime creationTime, Get200ApplicationJsonItemsLogsLastGossip lastGossip = default(Get200ApplicationJsonItemsLogsLastGossip), Get200ApplicationJsonItemsLogsLastUpdate lastUpdate = default(Get200ApplicationJsonItemsLogsLastUpdate), Get200ApplicationJsonItemsLogsQuarantined quarantined = default(Get200ApplicationJsonItemsLogsQuarantined), Get200ApplicationJsonItemsLogsLastUseOf lastUseOf = default(Get200ApplicationJsonItemsLogsLastUseOf))
        {
            CreationTime = creationTime;
            LastGossip = lastGossip;
            LastUpdate = lastUpdate;
            Quarantined = quarantined;
            LastUseOf = lastUseOf;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets when the node was known of our node
        /// </summary>
        [JsonProperty(PropertyName = "creation_time")]
        public Get200ApplicationJsonItemsLogsCreationTime CreationTime { get; set; }

        /// <summary>
        /// Gets or sets the last time we gossiped with the node
        /// </summary>
        [JsonProperty(PropertyName = "last_gossip")]
        public Get200ApplicationJsonItemsLogsLastGossip LastGossip { get; set; }

        /// <summary>
        /// Gets or sets the last time we received an update of the node (via
        /// gossiping with another node)
        /// </summary>
        [JsonProperty(PropertyName = "last_update")]
        public Get200ApplicationJsonItemsLogsLastUpdate LastUpdate { get; set; }

        /// <summary>
        /// Gets or sets the time at which the node was quarantined (if not
        /// there then the node is not quarantined)
        /// </summary>
        [JsonProperty(PropertyName = "quarantined")]
        public Get200ApplicationJsonItemsLogsQuarantined Quarantined { get; set; }

        /// <summary>
        /// Gets or sets the last time this node has been part of a view for
        /// event propagation
        /// </summary>
        [JsonProperty(PropertyName = "last_use_of")]
        public Get200ApplicationJsonItemsLogsLastUseOf LastUseOf { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CreationTime == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CreationTime");
            }
            if (CreationTime != null)
            {
                CreationTime.Validate();
            }
            if (LastGossip != null)
            {
                LastGossip.Validate();
            }
            if (LastUpdate != null)
            {
                LastUpdate.Validate();
            }
            if (Quarantined != null)
            {
                Quarantined.Validate();
            }
            if (LastUseOf != null)
            {
                LastUseOf.Validate();
            }
        }
    }
}
